name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose

    - name: Rust Release binary
      # You may pin to the exact commit or the version.
      # uses: rust-build/rust-build.action@6febf1b0ed6499a46610b58ef9d810398e75f3c2
      uses: rust-build/rust-build.action@v1.4.5
      with:
        # Output target
        RUSTTARGET: x86_64-apple-darwin
        # List of extra files to include in build
        # EXTRA_FILES: # optional
        # Path to directory containing Cargo.toml (defaults to project root)
        # SRC_DIR: "src/main.rs" # optional
        # List of archive types to publish the binaries with, default "zip", supports zip and all tar formats
        # ARCHIVE_TYPES: # optional
        # Full name of archive to upload (you must specify file extension and change this if building multiple targets)
        # ARCHIVE_NAME: # optional
        # Relative path of script to run before building
        # PRE_BUILD: # optional
        # Relative path of script to run after building
        # POST_BUILD: # optional
        # If set to "true", the resulting binary will be stripped and compressed by UPX. ("false" by default)
        MINIFY: true # optional
        # The rust toolchain version to use (see https://rust-lang.github.io/rustup/concepts/toolchains.html#toolchain-specification)
        # TOOLCHAIN_VERSION: # optional
        # What method to use to upload compiled binaries, supported values: (release, none), default: release
        UPLOAD_MODE: release # optional
        # Whether to statically link dependencies
        # STATIC_LINKING: # optional
        # Extra flags to give to cargo build (space separated)
        # EXTRA_COMMAND_FLAGS: # optional
        # Extra features to enable for the build
        # EXTRA_FEATURES: # optional
        # Features to enable for the build (implies --no-default-features)
        # FEATURES: # optional
              
